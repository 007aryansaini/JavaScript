--> Hello world program : 
 
              we can either use alert("hello World") or we can use console.log("hello world").
              
--> JavaScript :   
    
               . Js is high-level programming language.
               . It is object oriented too.
               . Multi-paradigm language.
              
           
--> Value : values are the fundamental units or we can say data. eg:- 4 , "aryan" etc.
           . Values are of two types it may be either object or of primitive type.
           
           
--> Variables : Variables are the memory locations in which values are stored so that we can use it again and again.
                 eg:- let name = "Aryan"; 
                 #NOTE : It is not mendatory to put a semicolon in JS but its a good practise.
                 
                 . We can use camel case or snake case while declaring a variable in JS.
                 . It should not have any space and special character other than $ ans _.
                 . Cannot start with a number.
                 . we cannot use reserved keyword.
                 . #NOTE : we can use reserved keyword name as variable name and it is allowed but in some cases it creates some problem.
                 . It is recommended to use lowercase while starting a variable name, it is just convention that is used.
                 . We start with uppercase in case of objects.
                 . For contants we use all uppercase. Eg:- let PI = 3.14;
                 
                 
--> Data types :  This is used to define what is the type of the data we are dealing with.
                  There are two types of data types :
                   . Primitive data type 
                   . Objects
                   
                   --> Primitive Datatype : These are the datatpes which are given by javascript.
                                There are basically 7 primitive data types in JS :
                                 . Number : Used for decimals and integers                                 
                                 . String : Sequence of character either in double quote and single quote.
                                 . Boolean : Stores either true or false
                                 . undefined : Value taken by a variable that is not yet defined
                                 . null : it means empty value
                                 . Symbol : Value that is unique and cannot be changed.
                                 . BigInt : Larger integer that a number can hold.
                            ##NOTE : JS is dynamically types
                                     . We do not have differnt variables we have different values
                                     . We can change different value in other type variable. Eg: we have let x = 20;
                                              later in the code x can also be x = "Aryan".
                                              
                                           
                                           
--> Commenst : There are two types of comments : 
                  . Single line comment : // ------
                  . Multiline comment : /*  ----- */
                  
--> typeof : It is an operator which is used to determine the datatype of a value.

                 #********  IMPORTANT Note : js says that the type of null is object.
                 
--> 3 different ways of witing a variable in JS : 
 
          . let : when we mutate the variable is a perfect case of using let.  eg: let x = 10;
                  . It is also used to declare empty variable.
                  
          . const : When we do not change the variable value then it we can use const. eg: const PI = 3.14;
                    . It is compulsory to initialize the const value;
                    
          . var : . It is the old way of defining the variable prior to ES6.
                  . var is functional scope while let is block scope.
                  
 --> Template literals ( strings )   :   We can write a string in more normal way and then basically insert the variables directly into the string.
                                         . In this we use backticks ( ` ` ).
                                         . we can write the string and if we want a variable the ${variable} is used.
                                         . eg :  const str = `I'm, ${name} and am ${ age } years old`;
                                         . It is used to create multiline strings. \n not required.
                                         
                                         
  --> Type conversion and coersion :  . Type conversion in when we mannually convert one data type to another on the other hand type coersion is 
                                        JS converts automatically to types nehind the scenes for us.
                                        
                                      . We use a Number() function to convert a string a number. Eg: const num = Number('20');
                                      . If we pass a string other than number then it will give NAN which states that it is invalid number. 
                                      . NaN is of type number.
                                      . Similarly, we have String function which converts a number to a string. Eg: const str = String(23);
 
 
                      Coersion : Whenever there is operator between two values of different types then JS automatically converts one of them to the
                                 type of the other so that the operation can be performed.
                                 
                                 . Whenever there is a number and a string the number will be converted to string and then the operation is perfomed
                                     if the operator bw them is + and in case of - operator string will be converted to number.
                                 . For * and / the results will be similar to -.
                                 
                      . 5 falsy values in JS : 0 , '" , undefined , null, NaN and false itsely is false.
                        and every value other than this will be trult values.
                        
                       . There are two scenariois in which JS converts to Boolean one in if else and other in relational operators.
                       
                       
 --> Equality Operators ( == and === ) : These are basically used to check whether two values are equal or not.
 
            . === is called the strict equality operator becoz it does not perform type coersion.
            . == loose equality operator. It actually done type coersion.
            . It is advised to use only === only and if you need conversion you can do it mannualy.
            
           #NOTE : prompt() function is used to take input from the user and returns a string value.
           
           
--> Strict Mode : We use strict mode to make our code secure.
                 . We can make a function or block as strict but we generally wite the activate strict mode on the top no code should be there
                   before it unless comments.
                 . Syntax :   'use strict';
                 
                 
--> Functions :   There are three types of functions in java 
                    . function declaration
                    . function expresiion 
                    . Arrow function
                    
                   #Note : one major differnce b/w them is that functiom declaration can be called befone they are declared but this is not possible
                           with function expression.
                           
                            'use strict';

                              // function declaration
                               function getAge1(year){
                                 return 2022 - year;
                               }

                                 const getAge2 = function(year){
                                  return 2022 - year;
                                   }

                               console.log(getAge1(2000) , "from age1");
                               console.log(getAge2(2000) , "from age2");
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
